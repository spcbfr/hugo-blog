#+HUGO_BASE_DIR: ~/repos/hugo-blog/

* New blog ! :hugo:
:PROPERTIES:
:EXPORT_FILE_NAME: first-blog
:EXPORT_DATE: 2021-10-18
:EXPORT_DESCRIPTION: a completly useless blog post, basically trying out hugo.
:EXPORT_AUTHOR:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :author "Youssef Bouzekri"
:END:
Hello once again to my redesigned blog, this time using [[https://gohugo.io][hugo]] as the backend with [[https://ox-hugo.scripter.co/][ox-hugo]] which converts my org-written blog posts to markdown.

through out this post, I will be testing ox-hugo's features and see what is possible !
** Heading 1
this is fun, hugo supports rich text, so I can have, *bold* and /italic/ text and even ~inline code blocks~
*** heading 2
I don't think I'll ever go beyond heading 2, this is a *very* useful bit of javascript code
#+begin_src js
console.log("hello world")
for(let i = 0; i > 10; i++){
    console.log(i)
}
#+end_src

#+begin_quote
I don't like how quote blocks look, but that is fine tbh.
#+end_quote
I can have lists:
+ Milk
+ House
+ Door
and even ordered ones:
1. what's up
2. I like this very much

* Distro Review :linux:
:PROPERTIES:
:EXPORT_FILE_NAME: distro-review
:EXPORT_DATE: 2021-10-18
:EXPORT_DESCRIPTION: in this blog post, I review every distro I've tried so far
:EXPORT_AUTHOR:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :author "Youssef Bouzekri"
:end:
Over the past year and a half of using linux, I've distrohopped a *lot*, today I am going to review every distro i've ever tried
** Criterias for a good distribution
here are some things that I care about when installing a distro
+ *Software availability* This excludes distros that only have free software in there repositories (like the [[https://www.gnu.org/distros/free-distros.en.html][fsf recommeneded distros]]) most of the software I use is free, but in some cases I can not work without certain propritery packages, like wifi and graphics drivers, programs I need for work, etc..
+ *Up-to-date software* similar to the first point some packages, require up-to-date libraries, this is why I prefer rolling-release distros, but I can live with stable-release distros as long as they have a short update cycle
+ *Minimum bloatware* I like minimal software and distros that come with as little bloat as possible, but not to the point where it would take a month or two for the distro to be even usable (I am looking at you, Linux-from-scratch !)
** Arch Linux
This is the distro I am currently using, and the one that I have been using for a the longest time and that is for good reasons:
+ Pacman is great package manager, I would go as far as to say that *pacman is the best package manager on linux*, it is pretty lightweight, but also comes with a lot of shinny features.
+ The largest software repository, if something exists on linux, you are going to find it in the arch's repositories, or at least in the Arch User Repository (AUR)
+ Arch is *clean out of the box*, This is good because it allows you to pick exactly what software you want to use, and by software I mean everything ! Window manager, Display manager, terminal, productivity suite, etc..

Here is how my arch linux setup looks like at the moment, using xmonad
[[/img/arch-desktop.png]]
** Gentoo
Gentoo is a special kind of distro, it is source based, which means that you get to have much more control of your system, you can pick what init system to use, you can even disable certain parts of programs that you don't need, this means that you will end up with *a minimal system that is designed specificly for you* , and you will also gain *a little bit of a performance boost*, but this comes with it's problems:
- because gentoo is source-based, most of the time it takes up to 7x more time to install anything compared to other linux distros, even on relativly good hardware
- the packages repository is considerably smaller than other distros.
- sometimes I just don't need that much customization
to conclude, gentoo is a great distro but only for a very small user base
** Ubuntu
Ubuntu holds a special place in my heart, that is because it is the first distro I've used, or even heard about, but now that I use a relativly more complex system, I've came to realise that ubuntu has it's problems:
- *ubuntu is slow* at least for what I now consider slow, because that was my first distro I didnt even know that an operating system could be any faster than that
- bloated by default: even with the minimal option selected, ubuntu is still very bloated, it comes with gnome as a DE and an office suite etc..
that said ubuntu is still great for the new distro and is generally much better than windows, it is also very widely used in servers.
** Distros I want to try out in the future
there are many distros I want to take a look at in the near future, the main two are =NixOS= and =Bedrock Linux= !

and that is pretty much it, thanks for reading !
* How to make a blog with hugo and org-mode :hugo:orgmode:tutorial:
:PROPERTIES:
:EXPORT_FILE_NAME: blogging-setup-hugo-and-org
:EXPORT_DESCRIPTION: A tutorial on how to start your own blog using hugo and org mode
:EXPORT_DATE: 2021-10-20
:EXPORT_AUTHOR:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :author "Youssef Bouzekri"
:END:
Yesterday, I've rewritten my blog using [[https://gohugo.io/][Hugo]] , but with a spin; instead of using the usual ~markdown -> hugo -> html~, I've went with ox-hugo which adds another layer to this process so it becomes ~org -> markdow -> hugo -> html~ and I've done this for a few reasons
- I am already using org-mode for my private notes, if I ever decide to make a note public that would be very easy with both my private and public notes using the same syntax
- ox-hugo is really easy to use, especially since I am using [[https://github.com/hlissner/doom-emacs][Doom Emacs]] and it can be enabled as an org-mode flag using ~(org +hugo)~
so, with that said, let's get into the fun stuff !

** Starting a new hugo blog
go ahead and install hugo, either from your distro's package manager or using npm (~npm -g hugo-cli~). for me, I'll be using pacman
#+begin_src bash
sudo pacman -S hugo
#+end_src
next, initialize your hugo project, using their cli
#+begin_src bash
hugo new site project-name
#+end_src
this will create a directory called ~project-name~ that contains the project starter
next, you need to pick a theme for your blog, you can find some community-made themes in [[https://themes.gohugo.io/][Hugo's Website]]

[[/img/hugo-themes.png]]
once you've picked a theme that you like, just clone the github repo into your Hugo's theme directory (~project-name/themes~)
#+begin_src bash
git clone https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ng
#+end_src
finally update your ~config.toml~ to apply the theme that you've just downloaded, and while you're at it, you might as well update the blog's metadata (title, description, language, etc..)
#+begin_src conf
baseurl      = "/"
title        = "My Blog"
languageCode = "en-us"
theme        = "theme-name"
...
#+end_src
you can now visit your site by running this command and opening localhost on port =1313=
#+begin_src bash
[youssef@tux ~/repos/hugo-blog]$ hugo server -D
Start building sites â€¦
hugo v0.88.1+extended linux/amd64 BuildDate=unknown

                   | EN
-------------------+-----
  Pages            | 16
  Paginator pages  |  0
  Non-page files   |  0
  Static files     | 19
  Processed images |  0
  Aliases          |  4
  Sitemaps         |  1
  Cleaned          |  0

Built in 586 ms
Environment: "development"
Serving pages from memory
Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
Web Server is available at //localhost:1313/ (bind address 127.0.0.1)
#+end_src
** Installing and configuring ox-hugo
ox-hugo is the package we are going to use to transform our org file(s) to markdown which then will be parsed by hugo
*** Installing ox-hugo
**** Vanilla emacs
you can install ox-hugo using =use-package=
#+begin_src elisp
(use-package ox-hugo
  :ensure t            ;Auto-install the package from Melpa (optional)
  :after ox)
#+end_src
**** Doom emacs
You can enable hugo by just adding the hugo flag to the org module in your ~init.el~ so it looks something like this ~(org +hugo)~
*** Integrating ox-hugo into our hugo blog
there are two ways to use ox-hugo:
1. all the posts in one org file, one post per-subtree (*Recommended*)
2. one post per org file
you may be more familiar with the second option but having all of the posts in one file has its benefits too
- makes the meta-data management for Hugo front-matter pretty effortless.
- you can use org mode's [[https://orgmode.org/manual/Tag-Inheritance.html][Tag Inheritance]] feature
so now that is out of the way, start by creating an org-file in your project's root, you can call it whatever you want. next, add a local variable at the top of the page and call it ~HUGO_BASE_DIR~ and set this to the absolute path to your hugo project, for me that looks something like this
#+begin_src elisp
#+HUGO_BASE_DIR: ~/repos/hugo-blog
#+end_src
*** Write your first post !
to make a new post you just need to add a new top-level heading to the org-file that we created, but you also need a bit of metadata. here is an example post:
#+begin_src org
,* Blog Post name
:properties:
:export_file_name: blog-post-name-in-url
:export_description: my cool post
:export_date: 2021-10-18
:export_author: your name
:end:
post's content !
#+end_src
finally to export the file to markdown you can run the ~org-hugo-export-wim-to-md~ function to export the blogpost to markdown and place it in the content folder in your hugo project
on doom emacs, you can also use the keybinding ~SPC m e H H~ to do the same thing
now if you open ~localhost:1313~ (make sure the hugo server is still running) you will see your newly created blog post show up !

And that's about it, I hope you've found this helpful, if you made you blog using this guide, tweet me over at [[https://twitter.com/YoussefOnLinux][@YoussefOnLinux]] and I'll make sure to check it out !
* TODO Why the command-line is (almost) always better than a GUI
